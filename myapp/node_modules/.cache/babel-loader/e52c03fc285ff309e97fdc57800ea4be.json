{"remainingRequest":"D:\\HuaweiMoveData\\Users\\86131\\Desktop\\物流动态视界\\myapp\\node_modules\\thread-loader\\dist\\cjs.js!D:\\HuaweiMoveData\\Users\\86131\\Desktop\\物流动态视界\\myapp\\node_modules\\babel-loader\\lib\\index.js!D:\\HuaweiMoveData\\Users\\86131\\Desktop\\物流动态视界\\myapp\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!D:\\HuaweiMoveData\\Users\\86131\\Desktop\\物流动态视界\\myapp\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\HuaweiMoveData\\Users\\86131\\Desktop\\物流动态视界\\myapp\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!D:\\HuaweiMoveData\\Users\\86131\\Desktop\\物流动态视界\\myapp\\src\\components\\DataAnalysis.vue?vue&type=template&id=57df3f30&scoped=true","dependencies":[{"path":"D:\\HuaweiMoveData\\Users\\86131\\Desktop\\物流动态视界\\myapp\\src\\components\\DataAnalysis.vue","mtime":1737826271267},{"path":"D:\\HuaweiMoveData\\Users\\86131\\Desktop\\物流动态视界\\myapp\\babel.config.js","mtime":1732176480598},{"path":"D:\\HuaweiMoveData\\Users\\86131\\Desktop\\物流动态视界\\myapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1732372474236},{"path":"D:\\HuaweiMoveData\\Users\\86131\\Desktop\\物流动态视界\\myapp\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1732372474211},{"path":"D:\\HuaweiMoveData\\Users\\86131\\Desktop\\物流动态视界\\myapp\\node_modules\\babel-loader\\lib\\index.js","mtime":1732372475869},{"path":"D:\\HuaweiMoveData\\Users\\86131\\Desktop\\物流动态视界\\myapp\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1732372477042},{"path":"D:\\HuaweiMoveData\\Users\\86131\\Desktop\\物流动态视界\\myapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1732372474236},{"path":"D:\\HuaweiMoveData\\Users\\86131\\Desktop\\物流动态视界\\myapp\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1732372476246}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlVGV4dFZOb2RlIGFzIF9jcmVhdGVUZXh0Vk5vZGUsIHJlc29sdmVDb21wb25lbnQgYXMgX3Jlc29sdmVDb21wb25lbnQsIHdpdGhDdHggYXMgX3dpdGhDdHgsIGNyZWF0ZVZOb2RlIGFzIF9jcmVhdGVWTm9kZSwgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIHJlbmRlckxpc3QgYXMgX3JlbmRlckxpc3QsIEZyYWdtZW50IGFzIF9GcmFnbWVudCwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUVsZW1lbnRCbG9jayBhcyBfY3JlYXRlRWxlbWVudEJsb2NrLCBjcmVhdGVCbG9jayBhcyBfY3JlYXRlQmxvY2ssIGNyZWF0ZVN0YXRpY1ZOb2RlIGFzIF9jcmVhdGVTdGF0aWNWTm9kZSwgcHVzaFNjb3BlSWQgYXMgX3B1c2hTY29wZUlkLCBwb3BTY29wZUlkIGFzIF9wb3BTY29wZUlkIH0gZnJvbSAidnVlIjsKCnZhciBfd2l0aFNjb3BlSWQgPSBmdW5jdGlvbiBfd2l0aFNjb3BlSWQobikgewogIHJldHVybiBfcHVzaFNjb3BlSWQoImRhdGEtdi01N2RmM2YzMCIpLCBuID0gbigpLCBfcG9wU2NvcGVJZCgpLCBuOwp9OwoKdmFyIF9ob2lzdGVkXzEgPSB7CiAgImNsYXNzIjogImFuYWx5c2lzLWNvbnRhaW5lciIKfTsKdmFyIF9ob2lzdGVkXzIgPSB7CiAgImNsYXNzIjogIm5hdi1oZWFkZXIiCn07Cgp2YXIgX2hvaXN0ZWRfMyA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVGV4dFZOb2RlKCLku5Plgqjlrp7lhrUiKTsKCnZhciBfaG9pc3RlZF80ID0gLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIuWunuaXtuebkea1iyIpOwoKdmFyIF9ob2lzdGVkXzUgPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKGZ1bmN0aW9uICgpIHsKICByZXR1cm4gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoInNwYW4iLCB7CiAgICAiY2xhc3MiOiAibmF2LXRleHQgYWN0aXZlIgogIH0sICLmlbDmja7liIbmnpAiLCAtMSk7Cn0pOwoKdmFyIF9ob2lzdGVkXzYgPSB7CiAgImNsYXNzIjogImNvbnRlbnQiCn07CnZhciBfaG9pc3RlZF83ID0gewogICJjbGFzcyI6ICJjaGFydHMtZ3JpZCIKfTsKdmFyIF9ob2lzdGVkXzggPSB7CiAgImNsYXNzIjogImNoYXJ0LWJveCIKfTsKCnZhciBfaG9pc3RlZF85ID0gLyojX19QVVJFX18qL193aXRoU2NvcGVJZChmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCB7CiAgICAiY2xhc3MiOiAiY2hhcnQtdGl0bGUiCiAgfSwgIuW6k+WtmOi2i+WKv+mihOa1iyIsIC0xKTsKfSk7Cgp2YXIgX2hvaXN0ZWRfMTAgPSB7CiAgImNsYXNzIjogImNoYXJ0LWJveCIKfTsKCnZhciBfaG9pc3RlZF8xMSA9IC8qI19fUFVSRV9fKi9fY3JlYXRlU3RhdGljVk5vZGUoIjxkaXYgY2xhc3M9XCJjaGFydC10aXRsZVwiIGRhdGEtdi01N2RmM2YzMD7ku5PlupPliKnnlKjnjofliIbmnpA8L2Rpdj48ZGl2IGNsYXNzPVwiZXZlbnQtc3VtbWFyeVwiIGRhdGEtdi01N2RmM2YzMD48ZGl2IGNsYXNzPVwiZXZlbnQtdHlwZVwiIGRhdGEtdi01N2RmM2YzMD7ku5PlupPmlbDph486IDxzcGFuIGNsYXNzPVwiaGlnaGxpZ2h0XCIgZGF0YS12LTU3ZGYzZjMwPjXkuKo8L3NwYW4+PC9kaXY+PGRpdiBjbGFzcz1cImV2ZW50LWNvdW50XCIgZGF0YS12LTU3ZGYzZjMwPuaAu+WuuemHjzogPHNwYW4gY2xhc3M9XCJoaWdobGlnaHRcIiBkYXRhLXYtNTdkZjNmMzA+MTAwMDBtwrM8L3NwYW4+PC9kaXY+PC9kaXY+IiwgMik7Cgp2YXIgX2hvaXN0ZWRfMTMgPSB7CiAgImNsYXNzIjogInJpbmdzLWNvbnRhaW5lciIKfTsKdmFyIF9ob2lzdGVkXzE0ID0gewogICJjbGFzcyI6ICJjaGFydC1ib3giCn07Cgp2YXIgX2hvaXN0ZWRfMTUgPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKGZ1bmN0aW9uICgpIHsKICByZXR1cm4gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIHsKICAgICJjbGFzcyI6ICJjaGFydC10aXRsZSIKICB9LCAi6LSn54mp5ZGo6L2s5YiG5p6QIiwgLTEpOwp9KTsKCnZhciBfaG9pc3RlZF8xNiA9IHsKICAiY2xhc3MiOiAiY2hhcnQtYm94Igp9OwoKdmFyIF9ob2lzdGVkXzE3ID0gLyojX19QVVJFX18qL193aXRoU2NvcGVJZChmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCB7CiAgICAiY2xhc3MiOiAiY2hhcnQtdGl0bGUiCiAgfSwgIuWHuuWFpeW6k+aVsOaNrue7n+iuoSIsIC0xKTsKfSk7CgpleHBvcnQgZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHZhciBfY29tcG9uZW50X3JvdXRlcl9saW5rID0gX3Jlc29sdmVDb21wb25lbnQoInJvdXRlci1saW5rIik7CgogIHZhciBfY29tcG9uZW50X3Z1ZV9lY2hhcnRzID0gX3Jlc29sdmVDb21wb25lbnQoInZ1ZS1lY2hhcnRzIik7CgogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIF9ob2lzdGVkXzEsIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8yLCBbX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfcm91dGVyX2xpbmssIHsKICAgIHRvOiAiLyIsCiAgICAiY2xhc3MiOiAibmF2LXRleHQiCiAgfSwgewogICAgImRlZmF1bHQiOiBfd2l0aEN0eChmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBbX2hvaXN0ZWRfM107CiAgICB9KSwKICAgIF86IDEKICB9KSwgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfcm91dGVyX2xpbmssIHsKICAgIHRvOiAiL21vbml0b3IiLAogICAgImNsYXNzIjogIm5hdi10ZXh0IgogIH0sIHsKICAgICJkZWZhdWx0IjogX3dpdGhDdHgoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gW19ob2lzdGVkXzRdOwogICAgfSksCiAgICBfOiAxCiAgfSksIF9ob2lzdGVkXzVdKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfNiwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzcsIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF84LCBbX2hvaXN0ZWRfOSwgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfdnVlX2VjaGFydHMsIHsKICAgIHJlZjogInRyZW5kQ2hhcnQiLAogICAgb3B0aW9uOiAkc2V0dXAudHJlbmRPcHRpb25zLAogICAgImNsYXNzIjogImNoYXJ0IiwKICAgIGF1dG9yZXNpemU6IHRydWUKICB9LCBudWxsLCA4LCBbIm9wdGlvbiJdKV0pLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8xMCwgW19ob2lzdGVkXzExLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8xMywgWyhfb3BlbkJsb2NrKHRydWUpLCBfY3JlYXRlRWxlbWVudEJsb2NrKF9GcmFnbWVudCwgbnVsbCwgX3JlbmRlckxpc3QoJHNldHVwLnV0aWxpemF0aW9uT3B0aW9ucywgZnVuY3Rpb24gKG9wdGlvbiwgaW5kZXgpIHsKICAgIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfY29tcG9uZW50X3Z1ZV9lY2hhcnRzLCB7CiAgICAgIGtleTogaW5kZXgsCiAgICAgIHJlZl9mb3I6IHRydWUsCiAgICAgIHJlZjogZnVuY3Rpb24gcmVmKGVsKSB7CiAgICAgICAgaWYgKGVsKSAkc2V0dXAudXRpbGl6YXRpb25DaGFydHNbaW5kZXhdID0gZWw7CiAgICAgIH0sCiAgICAgIG9wdGlvbjogb3B0aW9uLAogICAgICAiY2xhc3MiOiAicmluZy1jaGFydCIsCiAgICAgIGF1dG9yZXNpemU6IHRydWUKICAgIH0sIG51bGwsIDgsIFsib3B0aW9uIl0pOwogIH0pLCAxMjgpKV0pXSksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzE0LCBbX2hvaXN0ZWRfMTUsIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X3Z1ZV9lY2hhcnRzLCB7CiAgICByZWY6ICJ0dXJub3ZlckNoYXJ0IiwKICAgIG9wdGlvbjogJHNldHVwLnR1cm5vdmVyT3B0aW9ucywKICAgICJjbGFzcyI6ICJjaGFydCIsCiAgICBhdXRvcmVzaXplOiB0cnVlCiAgfSwgbnVsbCwgOCwgWyJvcHRpb24iXSldKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMTYsIFtfaG9pc3RlZF8xNywgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfdnVlX2VjaGFydHMsIHsKICAgIHJlZjogInN0YXRpc3RpY3NDaGFydCIsCiAgICBvcHRpb246ICRzZXR1cC5zdGF0aXN0aWNzT3B0aW9ucywKICAgICJjbGFzcyI6ICJjaGFydCIsCiAgICBhdXRvcmVzaXplOiB0cnVlCiAgfSwgbnVsbCwgOCwgWyJvcHRpb24iXSldKV0pXSldKTsKfQ=="},{"version":3,"sources":["D:\\HuaweiMoveData\\Users\\86131\\Desktop\\物流动态视界\\myapp\\src\\components\\DataAnalysis.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"analysis-container\">\r\n    <div class=\"nav-header\">\r\n      <router-link to=\"/\" class=\"nav-text\">仓储实况</router-link>\r\n      <router-link to=\"/monitor\" class=\"nav-text\">实时监测</router-link>\r\n      <span class=\"nav-text active\">数据分析</span>\r\n    </div>\r\n    \r\n    <div class=\"content\">\r\n      <div class=\"charts-grid\">\r\n        <!-- 库存趋势预测 -->\r\n        <div class=\"chart-box\">\r\n          <div class=\"chart-title\">库存趋势预测</div>\r\n          <vue-echarts \r\n            ref=\"trendChart\"\r\n            :option=\"trendOptions\" \r\n            class=\"chart\" \r\n            :autoresize=\"true\"\r\n          />\r\n        </div>\r\n\r\n        <!-- 仓库利用率分析 -->\r\n        <div class=\"chart-box\">\r\n          <div class=\"chart-title\">仓库利用率分析</div>\r\n          <div class=\"event-summary\">\r\n            <div class=\"event-type\">仓库数量: <span class=\"highlight\">5个</span></div>\r\n            <div class=\"event-count\">总容量: <span class=\"highlight\">10000m³</span></div>\r\n          </div>\r\n          <div class=\"rings-container\">\r\n            <vue-echarts \r\n              v-for=\"(option, index) in utilizationOptions\" \r\n              :key=\"index\"\r\n              :ref=\"el => { if (el) utilizationCharts[index] = el }\"\r\n              :option=\"option\" \r\n              class=\"ring-chart\"\r\n              :autoresize=\"true\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 货物周转分析 -->\r\n        <div class=\"chart-box\">\r\n          <div class=\"chart-title\">货物周转分析</div>\r\n          <vue-echarts \r\n            ref=\"turnoverChart\"\r\n            :option=\"turnoverOptions\" \r\n            class=\"chart\" \r\n            :autoresize=\"true\"\r\n          />\r\n        </div>\r\n\r\n        <!-- 入库出库统计 -->\r\n        <div class=\"chart-box\">\r\n          <div class=\"chart-title\">出入库数据统计</div>\r\n          <vue-echarts \r\n            ref=\"statisticsChart\"\r\n            :option=\"statisticsOptions\" \r\n            class=\"chart\" \r\n            :autoresize=\"true\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.analysis-container {\r\n  padding: 0;\r\n  color: #fff;\r\n  height: 98vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.nav-header {\r\n  height: 1rem;\r\n  width: 100%;\r\n  background-color: rgba(0, 0, 255, 0.2);\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 1rem;\r\n  gap: 30px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.content {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0 20px;\r\n  overflow: hidden;\r\n}\r\n\r\n.nav-text {\r\n  color: hsl(120, 4%, 95%);\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-size: 15px;\r\n}\r\n\r\n.nav-text:hover {\r\n  color: #1890ff;\r\n}\r\n\r\n.active {\r\n  color: #1890ff;\r\n}\r\n\r\n.charts-grid {\r\n  flex: 1;\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 20px;\r\n  padding: 20px;\r\n  border: 1px solid blue;\r\n  border-radius: 12px;\r\n  background: rgba(12,130,255,.85);\r\n  min-height: 0;\r\n}\r\n\r\n.chart-box {\r\n  background: rgba(12,130,255,.85);\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  border: 1px solid blue;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n}\r\n\r\n.chart {\r\n  flex: 1;\r\n  min-height: 0;\r\n}\r\n\r\n.chart-title {\r\n  color: #fff;\r\n  font-size: 18px;\r\n  margin-bottom: 20px;\r\n  padding-left: 20px;\r\n}\r\n\r\n.event-summary {\r\n  display: flex;\r\n  justify-content: space-around;\r\n  margin-bottom: 20px;\r\n  color: #fff;\r\n}\r\n\r\n.highlight {\r\n  color: #1890ff;\r\n  font-size: 20px;\r\n  margin: 0 5px;\r\n}\r\n\r\n.rings-container {\r\n  flex: 1;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  min-height: 0;\r\n}\r\n\r\n.ring-chart {\r\n  width: calc(33% - 20px);\r\n  min-width: 120px;\r\n  height: auto;\r\n  aspect-ratio: 1;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport { ref, onMounted, onUnmounted, nextTick } from 'vue';\r\nimport VueEcharts from 'vue-echarts';\r\nimport { use } from 'echarts/core';\r\nimport { CanvasRenderer } from 'echarts/renderers';\r\nimport { PieChart, LineChart, BarChart } from 'echarts/charts';\r\nimport {\r\n  GridComponent,\r\n  TooltipComponent,\r\n  LegendComponent,\r\n  TitleComponent\r\n} from 'echarts/components';\r\nimport axios from 'axios';\r\n\r\nuse([\r\n  CanvasRenderer,\r\n  PieChart,\r\n  LineChart,\r\n  BarChart,\r\n  GridComponent,\r\n  TooltipComponent,\r\n  LegendComponent,\r\n  TitleComponent\r\n]);\r\n\r\nexport default {\r\n  name: 'DataAnalysis',\r\n  components: { VueEcharts },\r\n  setup() {\r\n    const trendChart = ref(null);\r\n    const turnoverChart = ref(null);\r\n    const statisticsChart = ref(null);\r\n    const utilizationCharts = ref([]);\r\n\r\n    // 趋势预测配置\r\n    const trendOptions = ref({\r\n      tooltip: {\r\n        trigger: 'axis'\r\n      },\r\n      legend: {\r\n        data: ['预测库存', '实际库存'],\r\n        textStyle: { color: '#fff' }\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        data: ['1月', '2月', '3月', '4月', '5月', '6月', '7月'],\r\n        axisLabel: { color: '#fff' },\r\n        axisLine: { lineStyle: { color: '#fff' } }\r\n      },\r\n      yAxis: {\r\n        type: 'value',\r\n        name: '库存量(吨)',\r\n        nameTextStyle: { color: '#fff' },\r\n        axisLabel: { color: '#fff' },\r\n        axisLine: { lineStyle: { color: '#fff' } },\r\n        splitLine: { lineStyle: { color: 'rgba(255,255,255,0.1)' } }\r\n      },\r\n      series: [\r\n        {\r\n          name: '预测库存',\r\n          type: 'line',\r\n          smooth: true,\r\n          data: [1200, 1400, 1800, 1600, 1900, 2100, 2300],\r\n          lineStyle: { color: '#36cfc9' }\r\n        },\r\n        {\r\n          name: '实际库存',\r\n          type: 'line',\r\n          data: [1180, 1350, 1750, 1550, 1850, 2050, 2250],\r\n          itemStyle: { color: '#40a9ff' }\r\n        }\r\n      ]\r\n    });\r\n\r\n    // 仓库利用率配置\r\n    const utilizationOptions = ref([\r\n      createRingOption('A区仓库', 85, '#ffd666'),\r\n      createRingOption('B区仓库', 75, '#40a9ff'),\r\n      createRingOption('C区仓库', 90, '#597ef7'),\r\n      createRingOption('D区仓库', 65, '#ff7875'),\r\n      createRingOption('E区仓库', 70, '#95de64')\r\n    ]);\r\n\r\n    // 货物周转分析配置\r\n    const turnoverOptions = ref({\r\n      tooltip: { trigger: 'axis' },\r\n      legend: {\r\n        data: ['快速周转', '一般周转', '慢速周转'],\r\n        textStyle: { color: '#fff' }\r\n      },\r\n      xAxis: {\r\n        type: 'value',\r\n        axisLabel: { color: '#fff' },\r\n        axisLine: { lineStyle: { color: '#fff' } }\r\n      },\r\n      yAxis: {\r\n        type: 'category',\r\n        data: ['食品类', '电子类', '服装类', '原材料', '其他'],\r\n        axisLabel: { color: '#fff' },\r\n        axisLine: { lineStyle: { color: '#fff' } }\r\n      },\r\n      series: []\r\n    });\r\n\r\n    // 出入库统计配置\r\n    const statisticsOptions = ref({\r\n      tooltip: { trigger: 'axis' },\r\n      legend: {\r\n        data: ['入库量', '出库量'],\r\n        textStyle: { color: '#fff' }\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日'],\r\n        axisLabel: { color: '#fff' },\r\n        axisLine: { lineStyle: { color: '#fff' } }\r\n      },\r\n      yAxis: {\r\n        type: 'value',\r\n        name: '数量(吨)',\r\n        nameTextStyle: { color: '#fff' },\r\n        axisLabel: { color: '#fff' },\r\n        axisLine: { lineStyle: { color: '#fff' } }\r\n      },\r\n      series: []\r\n    });\r\n\r\n    // 获取数据分析数据\r\n    const fetchAnalysisData = async () => {\r\n      try {\r\n        // 使用正确的端口号\r\n        const baseURL = 'http://localhost:3000';\r\n        \r\n        // 获取趋势数据\r\n        const trendsResponse = await axios.get(`${baseURL}/api/analysis/trends`);\r\n        const trendsData = trendsResponse.data;\r\n        if (trendsData.length > 0) {\r\n          const months = trendsData.map(item => item.inventory.month);\r\n          const predictedValues = trendsData.map(item => item.inventory.predictedValue);\r\n          const actualValues = trendsData.map(item => item.inventory.actualValue);\r\n\r\n          trendOptions.value.xAxis.data = months;\r\n          trendOptions.value.series[0].data = predictedValues;\r\n          trendOptions.value.series[1].data = actualValues;\r\n        }\r\n\r\n        // 获取仓库利用率数据\r\n        const utilizationResponse = await axios.get(`${baseURL}/api/analysis/utilization`);\r\n        const utilizationData = utilizationResponse.data;\r\n        if (utilizationData.length > 0) {\r\n          utilizationOptions.value = utilizationData.map(warehouse => ({\r\n            title: {\r\n              text: warehouse.name,\r\n              subtext: `${warehouse.utilization}%`,\r\n              textStyle: { color: '#fff', fontSize: 14 },\r\n              subtextStyle: { color: '#fff', fontSize: 20 },\r\n              left: 'center',\r\n              top: 'center'\r\n            },\r\n            series: [{\r\n              type: 'pie',\r\n              radius: ['65%', '85%'],\r\n              data: [\r\n                { \r\n                  value: warehouse.utilization, \r\n                  itemStyle: { color: getWarehouseColor(warehouse.name) }\r\n                },\r\n                { \r\n                  value: 100 - warehouse.utilization, \r\n                  itemStyle: { color: 'rgba(255,255,255,0.1)' }\r\n                }\r\n              ],\r\n              label: { show: false }\r\n            }]\r\n          }));\r\n        }\r\n\r\n        // 获取完整的分析数据\r\n        const analysisResponse = await axios.get(`${baseURL}/api/analysis`);\r\n        const analysisData = analysisResponse.data;\r\n        \r\n        if (analysisData.turnover) {\r\n          turnoverOptions.value.series = [\r\n            {\r\n              name: '快速周转',\r\n              type: 'bar',\r\n              stack: '总量',\r\n              data: [\r\n                analysisData.turnover.fastTurnover,\r\n                analysisData.turnover.fastTurnover,\r\n                analysisData.turnover.fastTurnover,\r\n                analysisData.turnover.fastTurnover,\r\n                analysisData.turnover.fastTurnover\r\n              ]\r\n            },\r\n            {\r\n              name: '一般周转',\r\n              type: 'bar',\r\n              stack: '总量',\r\n              data: [\r\n                analysisData.turnover.normalTurnover,\r\n                analysisData.turnover.normalTurnover,\r\n                analysisData.turnover.normalTurnover,\r\n                analysisData.turnover.normalTurnover,\r\n                analysisData.turnover.normalTurnover\r\n              ]\r\n            },\r\n            {\r\n              name: '慢速周转',\r\n              type: 'bar',\r\n              stack: '总量',\r\n              data: [\r\n                analysisData.turnover.slowTurnover,\r\n                analysisData.turnover.slowTurnover,\r\n                analysisData.turnover.slowTurnover,\r\n                analysisData.turnover.slowTurnover,\r\n                analysisData.turnover.slowTurnover\r\n              ]\r\n            }\r\n          ];\r\n        }\r\n\r\n        if (analysisData.inOutStatistics) {\r\n          statisticsOptions.value.series = [\r\n            {\r\n              name: '入库量',\r\n              type: 'bar',\r\n              data: [analysisData.inOutStatistics.inbound],\r\n              itemStyle: { color: '#36cfc9' }\r\n            },\r\n            {\r\n              name: '出库量',\r\n              type: 'bar',\r\n              data: [analysisData.inOutStatistics.outbound],\r\n              itemStyle: { color: '#40a9ff' }\r\n            }\r\n          ];\r\n        }\r\n\r\n        // 确保 DOM 更新后再刷新图表\r\n        await nextTick();\r\n        \r\n        // 使用 setOption 方法更新图表\r\n        if (trendChart.value) {\r\n          trendChart.value.setOption(trendOptions.value);\r\n        }\r\n        if (turnoverChart.value) {\r\n          turnoverChart.value.setOption(turnoverOptions.value);\r\n        }\r\n        if (statisticsChart.value) {\r\n          statisticsChart.value.setOption(statisticsOptions.value);\r\n        }\r\n        utilizationCharts.value.forEach((chart, index) => {\r\n          if (chart) {\r\n            chart.setOption(utilizationOptions.value[index]);\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.error('Error fetching analysis data:', error);\r\n      }\r\n    };\r\n\r\n    // 获取仓库颜色\r\n    const getWarehouseColor = (name) => {\r\n      const colors = {\r\n        'A区仓库': '#ffd666',\r\n        'B区仓库': '#40a9ff',\r\n        'C区仓库': '#597ef7',\r\n        'D区仓库': '#ff7875',\r\n        'E区仓库': '#95de64'\r\n      };\r\n      return colors[name] || '#40a9ff';\r\n    };\r\n\r\n    // 添加辅助函数\r\n    function createRingOption(name, value, color) {\r\n      return {\r\n        title: {\r\n          text: name,\r\n          subtext: `${value}%`,\r\n          textStyle: { color: '#fff', fontSize: 14 },\r\n          subtextStyle: { color: '#fff', fontSize: 20 },\r\n          left: 'center',\r\n          top: 'center'\r\n        },\r\n        series: [{\r\n          type: 'pie',\r\n          radius: ['65%', '85%'],\r\n          data: [\r\n            { value: value, itemStyle: { color } },\r\n            { value: 100 - value, itemStyle: { color: 'rgba(255,255,255,0.1)' } }\r\n          ],\r\n          label: { show: false }\r\n        }]\r\n      };\r\n    }\r\n\r\n    onMounted(async () => {\r\n      // 初始获取数据\r\n      await fetchAnalysisData();\r\n      \r\n      // 设置1.5秒定时刷新\r\n      const refreshInterval = setInterval(async () => {\r\n          await fetchAnalysisData();\r\n      }, 1500);\r\n\r\n      // 组件卸载时清除定时器\r\n      onUnmounted(() => {\r\n          clearInterval(refreshInterval);\r\n      });\r\n    });\r\n\r\n    return {\r\n      trendChart,\r\n      turnoverChart,\r\n      statisticsChart,\r\n      utilizationCharts,\r\n      trendOptions,\r\n      utilizationOptions,\r\n      turnoverOptions,\r\n      statisticsOptions,\r\n      fetchAnalysisData\r\n    };\r\n  }\r\n};\r\n</script> "],"sourceRoot":""}]}