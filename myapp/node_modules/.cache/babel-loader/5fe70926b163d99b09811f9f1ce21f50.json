{"remainingRequest":"D:\\project\\中国古代天文学成就可视化\\myapp\\node_modules\\babel-loader\\lib\\index.js!D:\\project\\中国古代天文学成就可视化\\myapp\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!D:\\project\\中国古代天文学成就可视化\\myapp\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\project\\中国古代天文学成就可视化\\myapp\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!D:\\project\\中国古代天文学成就可视化\\myapp\\src\\components\\RealTimeMonitor.vue?vue&type=template&id=4c767bcf&scoped=true","dependencies":[{"path":"D:\\project\\中国古代天文学成就可视化\\myapp\\src\\components\\RealTimeMonitor.vue","mtime":1744019945369},{"path":"D:\\project\\中国古代天文学成就可视化\\myapp\\babel.config.js","mtime":1732176480598},{"path":"D:\\project\\中国古代天文学成就可视化\\myapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1732372474236},{"path":"D:\\project\\中国古代天文学成就可视化\\myapp\\node_modules\\babel-loader\\lib\\index.js","mtime":1732372475869},{"path":"D:\\project\\中国古代天文学成就可视化\\myapp\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1732372477042},{"path":"D:\\project\\中国古代天文学成就可视化\\myapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1732372474236},{"path":"D:\\project\\中国古代天文学成就可视化\\myapp\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1732372476246}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uLmpzIjsKaW1wb3J0IHsgY3JlYXRlQ29tbWVudFZOb2RlIGFzIF9jcmVhdGVDb21tZW50Vk5vZGUsIGNyZWF0ZVRleHRWTm9kZSBhcyBfY3JlYXRlVGV4dFZOb2RlLCByZXNvbHZlQ29tcG9uZW50IGFzIF9yZXNvbHZlQ29tcG9uZW50LCB3aXRoQ3R4IGFzIF93aXRoQ3R4LCBjcmVhdGVWTm9kZSBhcyBfY3JlYXRlVk5vZGUsIGNyZWF0ZUVsZW1lbnRWTm9kZSBhcyBfY3JlYXRlRWxlbWVudFZOb2RlLCB0b0Rpc3BsYXlTdHJpbmcgYXMgX3RvRGlzcGxheVN0cmluZywgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUVsZW1lbnRCbG9jayBhcyBfY3JlYXRlRWxlbWVudEJsb2NrLCBub3JtYWxpemVDbGFzcyBhcyBfbm9ybWFsaXplQ2xhc3MsIEZyYWdtZW50IGFzIF9GcmFnbWVudCwgcHVzaFNjb3BlSWQgYXMgX3B1c2hTY29wZUlkLCBwb3BTY29wZUlkIGFzIF9wb3BTY29wZUlkIH0gZnJvbSAidnVlIjsKCnZhciBfd2l0aFNjb3BlSWQgPSBmdW5jdGlvbiBfd2l0aFNjb3BlSWQobikgewogIHJldHVybiBfcHVzaFNjb3BlSWQoImRhdGEtdi00Yzc2N2JjZiIpLCBuID0gbigpLCBfcG9wU2NvcGVJZCgpLCBuOwp9OwoKdmFyIF9ob2lzdGVkXzEgPSB7CiAgImNsYXNzIjogIm5hdi1oZWFkZXIiCn07Cgp2YXIgX2hvaXN0ZWRfMiA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVGV4dFZOb2RlKCLml7bnqbrnu7TluqbCt+inguWkqea1i+WcsCIpOwoKdmFyIF9ob2lzdGVkXzMgPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKGZ1bmN0aW9uICgpIHsKICByZXR1cm4gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoInNwYW4iLCB7CiAgICAiY2xhc3MiOiAibmF2LXRleHQgYWN0aXZlIgogIH0sICLmmJ/lrpjkvZPns7vCt+WkqeS6uuWQiOS4gCIsIC0xCiAgLyogSE9JU1RFRCAqLwogICk7Cn0pOwoKdmFyIF9ob2lzdGVkXzQgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVRleHRWTm9kZSgi5a2m5pyv5Lyg5om/wrfpgZPlmajnm7jnlJ8iKTsKCnZhciBfaG9pc3RlZF81ID0gewogICJjbGFzcyI6ICJjb250ZW50Igp9OwoKdmFyIF9ob2lzdGVkXzYgPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKGZ1bmN0aW9uICgpIHsKICByZXR1cm4gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIHsKICAgICJjbGFzcyI6ICJzdGF0dXMtY2FyZHMiCiAgfSwgWy8qI19fUFVSRV9fKi9fY3JlYXRlQ29tbWVudFZOb2RlKCIgLi4uICIpXSwgLTEKICAvKiBIT0lTVEVEICovCiAgKTsKfSk7Cgp2YXIgX2hvaXN0ZWRfNyA9IHsKICAiY2xhc3MiOiAiY2hhcnRzLWNvbnRhaW5lciIKfTsKdmFyIF9ob2lzdGVkXzggPSB7CiAgImNsYXNzIjogImNoYXJ0LWJveCIKfTsKCnZhciBfaG9pc3RlZF85ID0gLyojX19QVVJFX18qL193aXRoU2NvcGVJZChmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJoMyIsIG51bGwsICLkuozljYHlhavlrr/mmJ/lm74iLCAtMQogIC8qIEhPSVNURUQgKi8KICApOwp9KTsKCnZhciBfaG9pc3RlZF8xMCA9IHsKICAiY2xhc3MiOiAiY29uc3RlbGxhdGlvbi1jb250ZW50Igp9Owp2YXIgX2hvaXN0ZWRfMTEgPSB7CiAgImNsYXNzIjogInN0YXItbWFwLWNvbnRhaW5lciIKfTsKdmFyIF9ob2lzdGVkXzEyID0gewogICJjbGFzcyI6ICJzdGFyLW1hcCIKfTsKdmFyIF9ob2lzdGVkXzEzID0gewogIHJlZjogInN0YXJNYXBDYW52YXMiCn07CnZhciBfaG9pc3RlZF8xNCA9IHsKICBrZXk6IDAsCiAgImNsYXNzIjogImNvbnN0ZWxsYXRpb24taW5mbyIKfTsKdmFyIF9ob2lzdGVkXzE1ID0gewogICJjbGFzcyI6ICJuYXZpZ2F0aW9uLWNvbnRyb2xzIgp9Owp2YXIgX2hvaXN0ZWRfMTYgPSB7CiAgImNsYXNzIjogImNvbnRyb2wtcGFuZWwiCn07CnZhciBfaG9pc3RlZF8xNyA9IHsKICAiY2xhc3MiOiAic2Vhc29uLWZpbHRlciIKfTsKdmFyIF9ob2lzdGVkXzE4ID0gewogICJjbGFzcyI6ICJjaGFydC1ib3giCn07Cgp2YXIgX2hvaXN0ZWRfMTkgPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKGZ1bmN0aW9uICgpIHsKICByZXR1cm4gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImgzIiwgbnVsbCwgIuWkqeaWh+S7quWZqOWPkeWxleaXtumXtOi9tCIsIC0xCiAgLyogSE9JU1RFRCAqLwogICk7Cn0pOwoKdmFyIF9ob2lzdGVkXzIwID0gLyojX19QVVJFX18qL193aXRoU2NvcGVJZChmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCB7CiAgICAiY2xhc3MiOiAiY29uc3RlbGxhdGlvbi10YWJsZSIKICB9LCBbLyojX19QVVJFX18qL19jcmVhdGVDb21tZW50Vk5vZGUoIiAuLi4gIildLCAtMQogIC8qIEhPSVNURUQgKi8KICApOwp9KTsKCmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgdmFyIF9jb21wb25lbnRfcm91dGVyX2xpbmsgPSBfcmVzb2x2ZUNvbXBvbmVudCgicm91dGVyLWxpbmsiKTsKCiAgdmFyIF9jb21wb25lbnRfdl9jaGFydCA9IF9yZXNvbHZlQ29tcG9uZW50KCJ2LWNoYXJ0Iik7CgogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soX0ZyYWdtZW50LCBudWxsLCBbX2NyZWF0ZUNvbW1lbnRWTm9kZSgiIOS/neaMgeWOn+acieaooeadv+e7k+aehOS4jeWPmCAiKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaGVhZGVyIiwgbnVsbCwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzEsIFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9yb3V0ZXJfbGluaywgewogICAgdG86ICIvIiwKICAgICJjbGFzcyI6ICJuYXYtdGV4dCIKICB9LCB7CiAgICAiZGVmYXVsdCI6IF93aXRoQ3R4KGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIFtfaG9pc3RlZF8yXTsKICAgIH0pLAogICAgXzogMQogICAgLyogU1RBQkxFICovCgogIH0pLCBfaG9pc3RlZF8zLCBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9yb3V0ZXJfbGluaywgewogICAgdG86ICIvYW5hbHlzaXMiLAogICAgImNsYXNzIjogIm5hdi10ZXh0IgogIH0sIHsKICAgICJkZWZhdWx0IjogX3dpdGhDdHgoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gW19ob2lzdGVkXzRdOwogICAgfSksCiAgICBfOiAxCiAgICAvKiBTVEFCTEUgKi8KCiAgfSldKV0pLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF81LCBbX2NyZWF0ZUNvbW1lbnRWTm9kZSgiIOS/neaMgeWOn+acieeKtuaAgeWNoeeJh+WSjOaXtumXtOi9tCAiKSwgX2hvaXN0ZWRfNiwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfNywgW19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzgsIFtfaG9pc3RlZF85LCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8xMCwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzExLCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMTIsIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8xMywgbnVsbCwgNTEyCiAgLyogTkVFRF9QQVRDSCAqLwogICldKSwgJHNldHVwLnNlbGVjdGVkQ29uc3RlbGxhdGlvbiA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIF9ob2lzdGVkXzE0LCBfdG9EaXNwbGF5U3RyaW5nKCRzZXR1cC5zZWxlY3RlZENvbnN0ZWxsYXRpb24uZGVzY3JpcHRpb24pLCAxCiAgLyogVEVYVCAqLwogICkpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgidi1pZiIsIHRydWUpLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8xNSwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImJ1dHRvbiIsIHsKICAgIG9uQ2xpY2s6IF9jYWNoZVswXSB8fCAoX2NhY2hlWzBdID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJHNldHVwLnpvb21JbiAmJiAkc2V0dXAuem9vbUluLmFwcGx5KCRzZXR1cCwgYXJndW1lbnRzKTsKICAgIH0pCiAgfSwgIuaUvuWkpyIpLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJidXR0b24iLCB7CiAgICBvbkNsaWNrOiBfY2FjaGVbMV0gfHwgKF9jYWNoZVsxXSA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuICRzZXR1cC56b29tT3V0ICYmICRzZXR1cC56b29tT3V0LmFwcGx5KCRzZXR1cCwgYXJndW1lbnRzKTsKICAgIH0pCiAgfSwgIue8qeWwjyIpLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJidXR0b24iLCB7CiAgICBvbkNsaWNrOiBfY2FjaGVbMl0gfHwgKF9jYWNoZVsyXSA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuICRzZXR1cC5yZXNldFZpZXcgJiYgJHNldHVwLnJlc2V0Vmlldy5hcHBseSgkc2V0dXAsIGFyZ3VtZW50cyk7CiAgICB9KQogIH0sICLph43nva7op4blm74iKV0pXSksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzE2LCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMTcsIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJidXR0b24iLCB7CiAgICAiY2xhc3MiOiBfbm9ybWFsaXplQ2xhc3MoewogICAgICBhY3RpdmU6ICRzZXR1cC5zZWxlY3RlZFNlYXNvbiA9PT0gJ+aYpScKICAgIH0pLAogICAgb25DbGljazogX2NhY2hlWzNdIHx8IChfY2FjaGVbM10gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgIHJldHVybiAkc2V0dXAuc2VsZWN0U2Vhc29uKCfmmKUnKTsKICAgIH0pCiAgfSwgIuS4nOWuq+iLjem+mSIsIDIKICAvKiBDTEFTUyAqLwogICksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImJ1dHRvbiIsIHsKICAgICJjbGFzcyI6IF9ub3JtYWxpemVDbGFzcyh7CiAgICAgIGFjdGl2ZTogJHNldHVwLnNlbGVjdGVkU2Vhc29uID09PSAn5aSPJwogICAgfSksCiAgICBvbkNsaWNrOiBfY2FjaGVbNF0gfHwgKF9jYWNoZVs0XSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgcmV0dXJuICRzZXR1cC5zZWxlY3RTZWFzb24oJ+WkjycpOwogICAgfSkKICB9LCAi5Y2X5a6r5pyx6ZuAIiwgMgogIC8qIENMQVNTICovCiAgKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiYnV0dG9uIiwgewogICAgImNsYXNzIjogX25vcm1hbGl6ZUNsYXNzKHsKICAgICAgYWN0aXZlOiAkc2V0dXAuc2VsZWN0ZWRTZWFzb24gPT09ICfnp4snCiAgICB9KSwKICAgIG9uQ2xpY2s6IF9jYWNoZVs1XSB8fCAoX2NhY2hlWzVdID0gZnVuY3Rpb24gKCRldmVudCkgewogICAgICByZXR1cm4gJHNldHVwLnNlbGVjdFNlYXNvbign56eLJyk7CiAgICB9KQogIH0sICLopb/lrqvnmb3omY4iLCAyCiAgLyogQ0xBU1MgKi8KICApLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJidXR0b24iLCB7CiAgICAiY2xhc3MiOiBfbm9ybWFsaXplQ2xhc3MoewogICAgICBhY3RpdmU6ICRzZXR1cC5zZWxlY3RlZFNlYXNvbiA9PT0gJ+WGrCcKICAgIH0pLAogICAgb25DbGljazogX2NhY2hlWzZdIHx8IChfY2FjaGVbNl0gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgIHJldHVybiAkc2V0dXAuc2VsZWN0U2Vhc29uKCflhqwnKTsKICAgIH0pCiAgfSwgIuWMl+Wuq+eOhOatpiIsIDIKICAvKiBDTEFTUyAqLwogICldKV0pXSldKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMTgsIFtfaG9pc3RlZF8xOSwgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfdl9jaGFydCwgewogICAgImNsYXNzIjogImNoYXJ0IiwKICAgIG9wdGlvbjogJHNldHVwLnRpbWVsaW5lT3B0aW9ucywKICAgIGF1dG9yZXNpemU6ICIiCiAgfSwgbnVsbCwgOAogIC8qIFBST1BTICovCiAgLCBbIm9wdGlvbiJdKV0pXSksIF9jcmVhdGVDb21tZW50Vk5vZGUoIiDkv53mjIHljp/mnInmmJ/lrpjooajmoLwgIiksIF9ob2lzdGVkXzIwXSldLCA2NAogIC8qIFNUQUJMRV9GUkFHTUVOVCAqLwogICk7Cn0="},{"version":3,"sources":["D:\\project\\中国古代天文学成就可视化\\myapp\\src\\components\\RealTimeMonitor.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <!-- 保持原有模板结构不变 -->\n  <header>\n    <div class=\"nav-header\">\n      <router-link to=\"/\" class=\"nav-text\">时空维度·观天测地</router-link>\n      <span class=\"nav-text active\">星官体系·天人合一</span>\n      <router-link to=\"/analysis\" class=\"nav-text \">学术传承·道器相生</router-link>\n    </div>\n  </header>\n\n  <div class=\"content\">\n    <!-- 保持原有状态卡片和时间轴 -->\n    <div class=\"status-cards\">\n      <!-- ... -->\n    </div>\n\n    <div class=\"charts-container\">\n      <div class=\"chart-box\">\n        <h3>二十八宿星图</h3>\n        <div class=\"constellation-content\">\n          <div class=\"star-map-container\">\n            <div class=\"star-map\">\n              <div ref=\"starMapCanvas\"></div>\n            </div>\n            <div class=\"constellation-info\" v-if=\"selectedConstellation\">\n              {{ selectedConstellation.description }}\n            </div>\n            <div class=\"navigation-controls\">\n              <button @click=\"zoomIn\">放大</button>\n              <button @click=\"zoomOut\">缩小</button>\n              <button @click=\"resetView\">重置视图</button>\n            </div>\n          </div>\n          <div class=\"control-panel\">\n            <div class=\"season-filter\">\n              <button :class=\"{ active: selectedSeason === '春' }\" @click=\"selectSeason('春')\">东宫苍龙</button>\n              <button :class=\"{ active: selectedSeason === '夏' }\" @click=\"selectSeason('夏')\">南宫朱雀</button>\n              <button :class=\"{ active: selectedSeason === '秋' }\" @click=\"selectSeason('秋')\">西宫白虎</button>\n              <button :class=\"{ active: selectedSeason === '冬' }\" @click=\"selectSeason('冬')\">北宫玄武</button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"chart-box\">\n        <h3>天文仪器发展时间轴</h3>\n        <v-chart class=\"chart\" :option=\"timelineOptions\" autoresize />\n      </div>\n    </div>\n\n    <!-- 保持原有星官表格 -->\n    <div class=\"constellation-table\">\n      <!-- ... -->\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, onUnmounted, nextTick } from 'vue';\nimport { use } from 'echarts/core';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport { PieChart, LineChart } from 'echarts/charts';\nimport { GridComponent, TooltipComponent, TitleComponent, LegendComponent, TimelineComponent } from 'echarts/components';\nimport VChart from 'vue-echarts';\nimport * as d3 from 'd3';\n\nuse([\n  CanvasRenderer,\n  PieChart,\n  LineChart,\n  GridComponent,\n  TooltipComponent,\n  TitleComponent,\n  LegendComponent,\n  TimelineComponent\n]);\n\nexport default {\n  name: 'StarSystemVisualization',\n  components: { VChart },\n  setup() {\n    // 星图相关数据\n    const selectedConstellation = ref(null);\n    const selectedSeason = ref('春');\n    const starMapCanvas = ref(null);\n    let zoom = null;\n    let svg = null;\n    let g = null;\n\n    // 星官数据\n    const constellationList = ref([\n      // 保持原有数据不变\n    ]);\n\n    // 时间轴配置\n    const timelineOptions = ref({\n      // 保持原有配置不变\n    });\n\n    // 形状生成器\n    const generateDragonShape = (centerX, centerY, radius) => {\n      const points = [];\n      for (let i = 0; i < 7; i++) {\n        const angle = (Math.PI / 6) * i - Math.PI / 2;\n        points.push({\n          x: centerX + radius * Math.cos(angle) * (1 + 0.2 * Math.sin(angle * 2)),\n          y: centerY + radius * Math.sin(angle) * 0.8\n        });\n      }\n      return points;\n    };\n\n    const generatePhoenixShape = (centerX, centerY) => {\n      return [\n        {x: centerX - 100, y: centerY - 80},\n        {x: centerX - 60, y: centerY - 120},\n        {x: centerX, y: centerY - 100},\n        {x: centerX + 80, y: centerY - 60},\n        {x: centerX, y: centerY},\n        {x: centerX - 80, y: centerY - 40},\n        {x: centerX - 40, y: centerY + 40}\n      ];\n    };\n\n    const generateTigerShape = (centerX, centerY) => {\n      return [\n        {x: centerX - 120, y: centerY - 30},\n        {x: centerX - 80, y: centerY - 50},\n        {x: centerX - 40, y: centerY - 30},\n        {x: centerX, y: centerY - 10},\n        {x: centerX + 40, y: centerY},\n        {x: centerX + 80, y: centerY + 20},\n        {x: centerX + 40, y: centerY + 40}\n      ];\n    };\n\n    const generateTortoiseShape = (centerX, centerY) => {\n      return [\n        {x: centerX - 60, y: centerY - 40},\n        {x: centerX - 30, y: centerY - 80},\n        {x: centerX, y: centerY - 60},\n        {x: centerX + 40, y: centerY - 40},\n        {x: centerX + 20, y: centerY},\n        {x: centerX - 20, y: centerY + 20},\n        {x: centerX - 60, y: centerY + 10}\n      ];\n    };\n\n    // 季节布局配置\n    const getSeasonLayout = (season, width, height) => {\n      const baseRadius = Math.min(width, height) * 0.3;\n      const layouts = {\n        春: {\n          shape: generateDragonShape(width*0.3, height*0.4, baseRadius),\n          color: '#4a90e2',\n          offset: {x: -50, y: -20}\n        },\n        夏: {\n          shape: generatePhoenixShape(width*0.7, height*0.4),\n          color: '#ff6b6b',\n          offset: {x: 0, y: -30}\n        },\n        秋: {\n          shape: generateTigerShape(width*0.3, height*0.7),\n          color: '#f0db4f',\n          offset: {x: -30, y: 20}\n        },\n        冬: {\n          shape: generateTortoiseShape(width*0.7, height*0.7),\n          color: '#2ecc71',\n          offset: {x: 20, y: 10}\n        }\n      };\n      return layouts[season] || layouts['春'];\n    };\n\n    // 星宿数据\n    const constellations = {\n      春: [\n        { name: \"角宿\", stars: 12, description: \"角宿：12颗星，象征龙角\" },\n        { name: \"亢宿\", stars: 4, description: \"亢宿：4颗星，象征龙颈\" },\n        { name: \"氐宿\", stars: 4, description: \"氐宿：4颗星，象征龙胸\" },\n        { name: \"房宿\", stars: 4, description: \"房宿：4颗星，象征龙腹\" },\n        { name: \"心宿\", stars: 3, description: \"心宿：3颗星，象征龙心\" },\n        { name: \"尾宿\", stars: 9, description: \"尾宿：9颗星，象征龙尾\" },\n        { name: \"箕宿\", stars: 4, description: \"箕宿：4颗星，象征龙尾末端\" }\n      ],\n      夏: [\n        // 类似结构填充其他季节数据\n      ],\n      秋: [\n        // 类似结构填充其他季节数据\n      ],\n      冬: [\n        // 类似结构填充其他季节数据\n      ]\n    };\n\n    // 初始化星图\n    const initStarMap = () => {\n      if (!starMapCanvas.value) return;\n\n      const container = starMapCanvas.value;\n      const width = container.clientWidth;\n      const height = container.clientHeight;\n\n      // 清除现有内容\n      d3.select(container).selectAll(\"*\").remove();\n\n      // 创建SVG容器\n      svg = d3.select(container)\n        .append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .style(\"background-color\", \"rgba(0, 0, 0, 0.5)\");\n\n      // 添加缩放功能\n      zoom = d3.zoom()\n        .scaleExtent([0.5, 5])\n        .on(\"zoom\", (event) => {\n          g.attr(\"transform\", event.transform);\n        });\n      \n      svg.call(zoom);\n\n      // 创建主绘图组\n      g = svg.append(\"g\");\n\n      // 获取当前季节布局\n      const { shape: coordinates, color, offset } = getSeasonLayout(selectedSeason.value, width, height);\n\n      // 绘制连线路径\n      const lineGenerator = d3.line()\n        .curve(d3.curveCardinal.tension(0.5))\n        .x(d => d.x)\n        .y(d => d.y);\n\n      g.append(\"path\")\n        .attr(\"d\", lineGenerator(coordinates))\n        .attr(\"class\", `connector ${selectedSeason.value.toLowerCase()}`)\n        .attr(\"stroke\", color)\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke-width\", 2)\n        .attr(\"stroke-dasharray\", function() {\n          const length = this.getTotalLength();\n          return `${length} ${length}`;\n        })\n        .attr(\"stroke-dashoffset\", function() {\n          return this.getTotalLength();\n        })\n        .transition()\n        .duration(1000)\n        .attr(\"stroke-dashoffset\", 0);\n\n      // 生成星点位置\n      const filteredConstellations = constellations[selectedSeason.value].map((c, i) => ({\n        ...c,\n        x: coordinates[i].x + offset.x,\n        y: coordinates[i].y + offset.y\n      }));\n\n      // 绘制星点\n      g.selectAll(\"circle.star\")\n        .data(filteredConstellations)\n        .enter()\n        .append(\"circle\")\n        .attr(\"cx\", d => d.x)\n        .attr(\"cy\", d => d.y)\n        .attr(\"r\", d => 5 + d.stars/3) // 根据星数调整大小\n        .attr(\"fill\", \"#fff\")\n        .attr(\"stroke\", color)\n        .attr(\"stroke-width\", 2)\n        .attr(\"class\", \"star\")\n        .on(\"mouseover\", function(event, d) {\n          d3.select(this)\n            .attr(\"r\", 8 + d.stars/3)\n            .attr(\"fill\", color);\n          \n          selectedConstellation.value = d;\n        })\n        .on(\"mouseout\", function(event, d) {\n          d3.select(this)\n            .attr(\"r\", 5 + d.stars/3)\n            .attr(\"fill\", \"#fff\");\n          \n          selectedConstellation.value = null;\n        });\n\n      // 添加星官名称\n      g.selectAll(\"text.star-name\")\n        .data(filteredConstellations)\n        .enter()\n        .append(\"text\")\n        .attr(\"x\", d => d.x + 12)\n        .attr(\"y\", d => d.y + 5)\n        .text(d => d.name)\n        .attr(\"fill\", color)\n        .attr(\"font-size\", \"12px\")\n        .attr(\"class\", \"star-name\");\n\n      // 自动调整视图\n      setTimeout(() => {\n        const bbox = g.node().getBBox();\n        const hRatio = width / bbox.width;\n        const vRatio = height / bbox.height;\n        const scale = 0.85 * Math.min(hRatio, vRatio);\n        const translateX = (width - bbox.width * scale) / 2 - bbox.x * scale;\n        const translateY = (height - bbox.height * scale) / 2 - bbox.y * scale;\n\n        svg.transition()\n          .duration(500)\n          .call(zoom.transform, d3.zoomIdentity\n            .translate(translateX, translateY)\n            .scale(scale));\n      }, 0);\n    };\n\n    // 季节选择\n    const selectSeason = (season) => {\n      selectedSeason.value = season;\n      initStarMap();\n    };\n\n    // 缩放控制\n    const zoomIn = () => {\n      if (svg) {\n        svg.transition()\n          .duration(300)\n          .call(zoom.scaleBy, 1.5);\n      }\n    };\n\n    const zoomOut = () => {\n      if (svg) {\n        svg.transition()\n          .duration(300)\n          .call(zoom.scaleBy, 0.75);\n      }\n    };\n\n    const resetView = () => {\n      if (svg) {\n        const container = starMapCanvas.value;\n        const width = container.clientWidth;\n        const height = container.clientHeight;\n        const bbox = g.node().getBBox();\n        const hRatio = width / bbox.width;\n        const vRatio = height / bbox.height;\n        const scale = 0.85 * Math.min(hRatio, vRatio);\n        const translateX = (width - bbox.width * scale) / 2 - bbox.x * scale;\n        const translateY = (height - bbox.height * scale) / 2 - bbox.y * scale;\n\n        svg.transition()\n          .duration(500)\n          .call(zoom.transform, d3.zoomIdentity\n            .translate(translateX, translateY)\n            .scale(scale));\n      }\n    };\n\n    // 响应式调整\n    const handleResize = () => {\n      if (starMapCanvas.value) {\n        initStarMap();\n      }\n    };\n\n    onMounted(() => {\n      initStarMap();\n      window.addEventListener('resize', handleResize);\n    });\n\n    onUnmounted(() => {\n      window.removeEventListener('resize', handleResize);\n    });\n\n    return {\n      selectedConstellation,\n      selectedSeason,\n      constellationList,\n      timelineOptions,\n      starMapCanvas,\n      selectSeason,\n      zoomIn,\n      zoomOut,\n      resetView\n    };\n  }\n};\n</script>\n\n<style scoped>\n/* 保持原有样式不变 */\n.content {\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  color: #fff;\n  height: calc(97vh - 60px);\n  border: 1px solid #4a90e2;\n  border-radius: 12px;\n  margin: 15px 20px;\n  background: linear-gradient(to bottom, rgba(13, 15, 44, 0.95), rgba(13, 15, 44, 0.85));\n  box-shadow: 0 0 20px rgba(74, 144, 226, 0.3);\n}\n\n.status-cards {\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 20px;\n}\n\n.status-card {\n  background: rgba(13, 15, 44, 0.7);\n  border-radius: 8px;\n  padding: 30px;\n  text-align: center;\n  border: 1px solid rgba(74, 144, 226, 0.6);\n  transition: all 0.3s ease;\n  height: 160px;\n  backdrop-filter: blur(10px);\n}\n\n.status-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 5px 15px rgba(74, 144, 226, 0.4);\n}\n\n.status-card h3 {\n  margin: 0;\n  font-size: 18px;\n  color: rgba(255, 255, 255, 0.9);\n  font-weight: 500;\n}\n\n.value {\n  font-size: 32px;\n  font-weight: bold;\n  margin-top: 15px;\n  background: linear-gradient(45deg, #4a90e2, #64b5f6);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n}\n\n.charts-container {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 20px;\n}\n\n.chart-box {\n  background: rgba(13, 15, 44, 0.7);\n  border-radius: 8px;\n  padding: 20px;\n  border: 1px solid rgba(74, 144, 226, 0.6);\n  height: 450px;\n  backdrop-filter: blur(10px);\n}\n\n.constellation-content {\n  display: flex;\n  gap: 20px;\n  height: 380px;\n}\n\n.star-map-container {\n  flex: 1;\n  background: rgba(0, 0, 0, 0.5);\n  border-radius: 8px;\n  position: relative;\n}\n\n.star-map {\n  width: 100%;\n  height: 100%;\n}\n\n.constellation-info {\n  position: absolute;\n  bottom: 20px;\n  left: 20px;\n  right: 20px;\n  background: rgba(13, 15, 44, 0.9);\n  color: white;\n  padding: 15px;\n  border-radius: 4px;\n  font-size: 14px;\n  line-height: 1.6;\n  border: 1px solid rgba(74, 144, 226, 0.4);\n}\n\n.navigation-controls {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  display: flex;\n  gap: 10px;\n}\n\n.control-panel {\n  width: 150px;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n}\n\n.season-filter {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.season-filter button {\n  width: 100%;\n  padding: 12px;\n  background: rgba(74, 144, 226, 0.2);\n  color: white;\n  border: 1px solid rgba(74, 144, 226, 0.4);\n  border-radius: 4px;\n  cursor: pointer;\n  transition: all 0.3s;\n}\n\n.season-filter button.active {\n  background: rgba(74, 144, 226, 0.8);\n  border-color: #4a90e2;\n}\n\n.season-filter button:hover:not(.active) {\n  background: rgba(74, 144, 226, 0.4);\n}\n\n.constellation-table {\n  background: rgba(13, 15, 44, 0.7);\n  border-radius: 8px;\n  padding: 20px;\n  border: 1px solid rgba(74, 144, 226, 0.6);\n  backdrop-filter: blur(10px);\n}\n\n.constellation-table h3 {\n  margin: 0 0 20px 0;\n  font-size: 18px;\n  text-align: center;\n  color: #fff;\n}\n\ntable {\n  width: 100%;\n  border-collapse: separate;\n  border-spacing: 0;\n}\n\nth, td {\n  padding: 12px;\n  text-align: left;\n  border-bottom: 1px solid rgba(74, 144, 226, 0.2);\n  color: #fff;\n}\n\nth {\n  font-weight: 500;\n  color: rgba(255, 255, 255, 0.9);\n  background: rgba(74, 144, 226, 0.1);\n}\n\n.history-text {\n  max-width: 300px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.chart {\n  width: 100%;\n  height: 100%;\n}\n\nbutton {\n  font-family: \"Microsoft YaHei\", sans-serif;\n}\n\nbutton:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n/* 星空动画效果 */\n@keyframes twinkle {\n  0% { opacity: 0.3; }\n  50% { opacity: 1; }\n  100% { opacity: 0.3; }\n}\n\n.star-map::before {\n  content: '';\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-image: radial-gradient(circle at center, rgba(255,255,255,0.1) 0%, transparent 1%);\n  background-size: 15px 15px;\n  animation: twinkle 3s infinite;\n}\n\n.nav-header {\n  height: 60px;\n  padding: 40px 20px;\n  display: flex;\n  align-items: center;\n  gap: 30px;\n  background: rgba(13, 15, 44, 0.6);\n  position: relative;\n  border: 1px solid rgba(0, 195, 255, 0.3);\n}\n\n.nav-header::before,\n.nav-header::after {\n  content: '';\n  position: absolute;\n  width: 20px;\n  height: 20px;\n}\n\n.nav-header::before {\n  top: -1px;\n  left: -1px;\n  border-top: 2px solid #00c3ff;\n  border-left: 2px solid #00c3ff;\n  box-shadow: -2px -2px 10px rgba(0, 195, 255, 0.5);\n}\n\n.nav-header::after {\n  bottom: -1px;\n  right: -1px;\n  border-bottom: 2px solid #00c3ff;\n  border-right: 2px solid #00c3ff;\n  box-shadow: 2px 2px 10px rgba(0, 195, 255, 0.5);\n}\n\n.nav-text {\n  color: rgba(255, 255, 255, 0.8);\n  text-decoration: none;\n  font-size: 16px;\n  transition: all 0.3s ease;\n  position: relative;\n  padding: 5px 15px;\n}\n\n.nav-text:hover {\n  color: #00c3ff;\n  text-shadow: 0 0 10px rgba(0, 195, 255, 0.5);\n}\n\n.nav-text.active {\n  color: #00c3ff;\n  background: rgba(0, 195, 255, 0.1);\n  border: 1px solid rgba(0, 195, 255, 0.3);\n}\n</style>"],"sourceRoot":""}]}