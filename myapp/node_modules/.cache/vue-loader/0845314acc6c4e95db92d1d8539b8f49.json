{"remainingRequest":"C:\\Users\\86131\\Desktop\\物流动态视界\\myapp\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\86131\\Desktop\\物流动态视界\\myapp\\src\\components\\itemTwo.vue?vue&type=template&id=476f504e&scoped=true","dependencies":[{"path":"C:\\Users\\86131\\Desktop\\物流动态视界\\myapp\\src\\components\\itemTwo.vue","mtime":1734232639069},{"path":"C:\\Users\\86131\\Desktop\\物流动态视界\\myapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1732372474236},{"path":"C:\\Users\\86131\\Desktop\\物流动态视界\\myapp\\node_modules\\babel-loader\\lib\\index.js","mtime":1732372475869},{"path":"C:\\Users\\86131\\Desktop\\物流动态视界\\myapp\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1732372477042},{"path":"C:\\Users\\86131\\Desktop\\物流动态视界\\myapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1732372474236},{"path":"C:\\Users\\86131\\Desktop\\物流动态视界\\myapp\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1732372476246}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogIDxkaXYgY2xhc3M9ImNoYXJ0LWNvbnRhaW5lciI+DQogICAgPGgyIGNsYXNzPSJjaGFydC10aXRsZSI+5ZGY5bel5rS76LeD54q25Ya1PC9oMj4NCiAgICA8dnVlLWVjaGFydHMgOm9wdGlvbnM9Im9wdGlvbnMiIDphdXRvcmVzaXplPSJ0cnVlIiByZWY9ImNoYXJ0UmVmIiAvPg0KICA8L2Rpdj4NCg=="},{"version":3,"sources":["C:\\Users\\86131\\Desktop\\物流动态视界\\myapp\\src\\components\\itemTwo.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;EACrE,CAAC,CAAC,CAAC,CAAC,CAAC","file":"C:/Users/86131/Desktop/物流动态视界/myapp/src/components/itemTwo.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <div class=\"chart-container\">\r\n    <h2 class=\"chart-title\">员工活跃状况</h2>\r\n    <vue-echarts :options=\"options\" :autoresize=\"true\" ref=\"chartRef\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, onUnmounted } from 'vue';\r\nimport VueEcharts from 'vue-echarts';\r\nimport * as echarts from 'echarts';\r\n\r\nexport default {\r\n  name: 'StaffActivityChart',\r\n  components: {\r\n    VueEcharts,\r\n  },\r\n  setup() {\r\n    const chartRef = ref(null);\r\n    let updateTimer = null;\r\n    const totalUsers = ref(1000);\r\n\r\n    const generateRandomData = (base, range) => {\r\n      return Math.floor(Math.random() * range + base);\r\n    };\r\n\r\n    const options = ref({\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          type: 'shadow'\r\n        }\r\n      },\r\n      grid: {\r\n        top: '5%',\r\n        left: '3%',\r\n        right: '8%',\r\n        bottom: '3%',\r\n        containLabel: true\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        data: ['0-20', '20-30', '30-50', '>50'],\r\n        axisLine: {\r\n          lineStyle: {\r\n            color: 'rgba(0, 195, 255, 0.5)'\r\n          }\r\n        },\r\n        axisLabel: {\r\n          color: '#fff'\r\n        }\r\n      },\r\n      yAxis: {\r\n        type: 'value',\r\n        splitLine: {\r\n          lineStyle: {\r\n            color: 'rgba(0, 195, 255, 0.1)'\r\n          }\r\n        },\r\n        axisLine: {\r\n          lineStyle: {\r\n            color: 'rgba(0, 195, 255, 0.5)'\r\n          }\r\n        },\r\n        axisLabel: {\r\n          color: '#fff'\r\n        }\r\n      },\r\n      series: [{\r\n        type: 'bar',\r\n        barWidth: '40%',\r\n        data: [295476, 495255, 715401, 195612],\r\n        itemStyle: {\r\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n            { offset: 0, color: '#4D7EFF' },\r\n            { offset: 1, color: '#0B4FA1' }\r\n          ])\r\n        },\r\n        label: {\r\n          show: true,\r\n          position: 'top',\r\n          color: '#fff',\r\n          formatter: function(params) {\r\n            return params.value.toLocaleString();\r\n          }\r\n        }\r\n      }]\r\n    });\r\n\r\n    const updateData = () => {\r\n      if (chartRef.value) {\r\n        const newData = options.value.series[0].data.map(value => {\r\n          return generateRandomData(value * 0.8, value * 0.4);\r\n        });\r\n        \r\n        options.value.series[0].data = newData;\r\n        totalUsers.value = newData.reduce((a, b) => a + b, 0);\r\n        \r\n        chartRef.value.setOption(options.value);\r\n      }\r\n    };\r\n\r\n    onMounted(() => {\r\n      if (chartRef.value) {\r\n        chartRef.value.setOption(options.value);\r\n        updateTimer = setInterval(updateData, 1500);\r\n      }\r\n    });\r\n\r\n    onUnmounted(() => {\r\n      if (updateTimer) {\r\n        clearInterval(updateTimer);\r\n      }\r\n    });\r\n\r\n    return {\r\n      options,\r\n      chartRef,\r\n      totalUsers\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.chart-container {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  animation: containerFade 0.5s ease-in-out;\r\n}\r\n\r\n@keyframes containerFade {\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(20px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n.chart-title {\r\n  color: #fff;\r\n  font-size: 16px;\r\n  margin: 0;\r\n  text-align: center;\r\n  height: 30px;\r\n  line-height: 30px;\r\n  animation: slideIn 0.5s ease-out;\r\n}\r\n\r\n@keyframes slideIn {\r\n  from {\r\n    opacity: 0;\r\n    transform: translateX(-20px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n}\r\n\r\n:deep(.echarts) {\r\n  width: 100% !important;\r\n  height: calc(100% - 30px) !important;\r\n}\r\n</style>"]}]}